package initiate.common.constants

import java.time.format.DateTimeFormatter
import java.util.*

object SubmissionConstants {
    const val HS_COMPLETE = "complete"
    const val HS_PROCESSING = "processing"
    const val HS_SUPERVISION = "supervision"
    const val EXCEPTION_REQUIRED_FIELD_MISSING = "required_field_missing"
    const val READY_FOR_OCR = "READYFOROCR"
    const val READY_FOR_INDEXING = "READY_FOR_INDEXING"
    const val READY_FOR_RECORD_MATCHING = "READYFORRECORDMATCHING"
    const val RECORDMATCHING_IN_PROGRESS = "RECORDMATCHINGINPROGRESS"
    const val OCR_IN_PROGRESS = "OCRINPROGRESS"
    const val READY_FOR_CLASSIFIER = "READYFORCLASSIFIER"
    const val OCR_SUCCESS = "OCRSUCCESS"
    const val OCR_ERROR = "OCRNOTCLASSIFIED"
    const val HIL_TRANSCRIPTION = "HIL_TRANSCRIPTION"
    const val HS_USER_ID = "HyperSci"
    const val HS_SUBMISSION_ID = "HS_SUBMISSION_ID"
    val STATUSES_TO_FAIL = sequenceOf(OCR_IN_PROGRESS, HIL_TRANSCRIPTION)

    @JvmField
    val TRUE_STRING = true.toString().uppercase(Locale.getDefault())
    val FALSE_STRING = false.toString().uppercase(Locale.getDefault())
    const val TRUE_1_STRING = "1"
    const val FALSE_0_STRING = "0"

    const val YES_FLAG = "Y"
    const val NO_FLAG = "N"

    const val DOC_TYPE_21_22 = "21-22"
    const val DOC_TYPE_4138 = "4138"
    const val DOC_TYPE_526EZ = "526ez"
    const val LAYOUT_TAG_0538 = "0538"
    const val DOC_TYPE_0845 = "0845"
    const val DOC_TYPE_EVD_21_0538 = "EVD-21-0538"
    const val DOC_TYPE_686C = "686c"
    const val DOC_TYPE_0966 = "0966"
    const val DOC_TYPE_POA2122 = "POA2122"
    const val DOC_TYPE_2680 = "2680"
    const val DOC_TYPE_EVD_DC = "EVD-DC"
    const val DOC_TYPE_RM = "RM"
    const val DOC_TYPE_530 = "530"
    const val DOC_TYPE_530_EZ = "530EZ"
    const val DOC_TYPE_EVD_70_3288 = "EVD-70-3288"
    const val DOC_TYPE_SF_180 = "SF 180"
    const val DOC_TYPE_10206 = "10206"
    const val DOC_TYPE_0820 = "820"
    const val DOC_TYPE_CORRESPONDENCE = "EVD-COR"
    const val DOC_TYPE_TPC = "EVD-TPC"
    const val DOC_TYPE_0820A = "0820a"
    const val DOC_TYPE_527 = "527"
    const val DOC_TYPE_527EZ = "527EZ"
    const val DOC_TYPE_21_8951 = "21-8951"
    const val DOC_TYPE_21_8951_2 = "21-8951-2"
    const val DOC_TYPE_21_8940 = "21-8940"
    const val DOC_TYPE_534 = "534"
    const val DOC_TYPE_534_EZ = "534EZ"
    const val DOC_TYPE_24_0296 = "24-0296"
    const val DOC_TYPE_674 = "674"
    const val DOC_TYPE_674b = "674b"
    val FOIA_DOC_TYPES = sequenceOf(
        DOC_TYPE_4138,
        DOC_TYPE_10206,
        DOC_TYPE_SF_180,
        DOC_TYPE_EVD_70_3288,
        DOC_TYPE_0820,
        DOC_TYPE_21_22,
        DOC_TYPE_POA2122
    )
    val NAME_LAST_FIRST_MIDDLE_DOC_TYPES = sequenceOf(DOC_TYPE_SF_180, DOC_TYPE_0820, DOC_TYPE_0820A)

    @JvmField
    val DOC_TYPES_OCR_SUCCESS_COMMON = setOf(
        DOC_TYPE_0845, DOC_TYPE_0966, DOC_TYPE_RM, DOC_TYPE_530, DOC_TYPE_2680,
        DOC_TYPE_0820A, DOC_TYPE_527EZ, DOC_TYPE_21_8951, DOC_TYPE_21_8951_2, DOC_TYPE_534_EZ, DOC_TYPE_24_0296
    )

    @JvmField
    val DOC_TYPES_OCR_SUCCESS_MAS = DOC_TYPES_OCR_SUCCESS_COMMON.plus(DOC_TYPE_SF_180)

    @JvmField
    val DOC_TYPES_OCR_SUCCESS_FOIA = DOC_TYPES_OCR_SUCCESS_COMMON.plus(DOC_TYPE_21_22)

    const val CURRENT_DISABILITY = "CURRENT_DISABILITY"
    const val CLAIMANT_SIGNATURE = "CLAIMANT_SIGNATURE"
    const val CLAIMANT_SIGNATURE_DATE = "CLAIMANT_SIGNATURE_DATE"
    const val SECURITY_ANSWER = "SECURITY_ANSWER"
    val ITERATED_FIELDS = setOf(CURRENT_DISABILITY, "EXPOSURE_EVENT_INJURY", "DISABILITY_REL_EXPOSURE_EVENT_INJURY")

    const val POA_SIGNATURE = "POA_SIGNATURE"
    const val THIRD_PARTY_SIGNATURE = "THIRD_PARTY_SIGNATURE"
    const val PROPERLY_IDENTIFIED = "PROPERLY_IDENTIFIED"

    const val VETERAN_KEY = "VETERAN"
    const val DECEASED_VETERAN_KEY = "DECEASED_VETERAN"
    const val DECEASED_VBMS_MATCH = "DECEASED_VBMS_MATCH"
    const val DECEASED_PREFIX = "DECEASED_"
    const val DECEASED_TYPE = "DECEASED_TYPE"
    const val OCR_DECEASED_NAME = "OCR_DECEASED_NAME"
    const val DECEASED_NAME = "DECEASED_NAME"
    const val DECEASED_FIRST_NAME = "DECEASED_FIRST_NAME"
    const val DECEASED_LAST_NAME = "DECEASED_LAST_NAME"
    const val DECEASED_SSN = "DECEASED_SSN"

    const val NOT_APPLICABLE = "NOT APPLICABLE"

    @JvmField
    val NOT_APPLICABLE_FIELDS = setOf(
        "NA",
        "NA NA",
        NOT_APPLICABLE,
        "N/A",
        "SAME",
        "SAME AS VET",
        "SAME AS VETERAN",
        "SAME AS ABOVE",
        VETERAN_KEY,
        "NONE"
    );

    const val VETERAN_NAME = "VETERAN_NAME"
    const val OCR_VETERAN_NAME = "OCR_VETERAN_NAME"
    const val VETERAN_FIRST_NAME = "VETERAN_FIRST_NAME"
    const val VETERAN_LAST_NAME = "VETERAN_LAST_NAME"
    const val VETERAN_SSN = "VETERAN_SSN"
    const val VETERAN_DOB = "VETERAN_DOB"
    const val VA_FILE_NUMBER = "VA_FILE_NUMBER"
    const val VETERANS_SERVICE_NUMBER = "VETERANS_SERVICE_NUMBER"
    const val VETERAN_VBMS_MATCH = "VETERAN_VBMS_MATCH"
    const val VET_PROFILE_DATA = "VET_PROFILE_DATA"
    const val VETERAN_SIGNATURE = "VETERAN_SIGNATURE"

    const val VETERAN_MARRIAGE_1_PLACE = "VETERAN_MARRIAGE_1_PLACE"
    const val VETERAN_MARRIAGE_2_PLACE = "VETERAN_MARRIAGE_2_PLACE"
    const val VETERAN_MARRIAGE_1_DATE = "VETERAN_MARRIAGE_1_DATE"
    const val VETERAN_MARRIAGE_2_DATE = "VETERAN_MARRIAGE_2_DATE"
    const val CLAIMANT_MARRIAGE_1_DATE = "CLAIMANT_MARRIAGE_1_DATE"
    const val CLAIMANT_MARRIAGE_1_PLACE = "CLAIMANT_MARRIAGE_1_PLACE"
    const val CLAIMANT_MARRIAGE_2_DATE = "CLAIMANT_MARRIAGE_2_DATE"
    const val CLAIMANT_MARRIAGE_2_PLACE = "CLAIMANT_MARRIAGE_2_PLACE"
    const val WITNESS_1_NAME_ADDRESS = "WITNESS_1_NAME_ADDRESS"
    const val WITNESS_1_NAME = "WITNESS_1_NAME"
    const val WITNESS_1_ADDRESS = "WITNESS_1_ADDRESS"
    const val WITNESS_2_NAME_ADDRESS = "WITNESS_2_NAME_ADDRESS"
    const val WITNESS_2_NAME = "WITNESS_2_NAME"
    const val WITNESS_2_ADDRESS = "WITNESS_2_ADDRESS"
    const val VETERAN_MARRIAGE_1_PLACE_ENDED = "VETERAN_MARRIAGE_1_PLACE_ENDED"
    const val VETERAN_MARRIAGE_2_PLACE_ENDED = "VETERAN_MARRIAGE_2_PLACE_ENDED"
    const val VETERAN_MARRIAGE_1_DATE_ENDED = "VETERAN_MARRIAGE_1_DATE_ENDED"
    const val VETERAN_MARRIAGE_2_DATE_ENDED = "VETERAN_MARRIAGE_2_DATE_ENDED"
    const val CLAIMANT_MARRIAGE_1_DATE_ENDED = "CLAIMANT_MARRIAGE_1_DATE_ENDED"
    const val CLAIMANT_MARRIAGE_1_PLACE_ENDED = "CLAIMANT_MARRIAGE_1_PLACE_ENDED"
    const val CLAIMANT_MARRIAGE_2_DATE_ENDED = "CLAIMANT_MARRIAGE_2_DATE_ENDED"
    const val CLAIMANT_MARRIAGE_2_PLACE_ENDED = "CLAIMANT_MARRIAGE_2_PLACE_ENDED"
    const val PLACE_OF_BIRTH_CHILD_1 = "PLACE_OF_BIRTH_CHILD_1"
    const val DATE_OF_BIRTH_CHILD_1 = "DATE_OF_BIRTH_CHILD_1"
    const val PLACE_OF_BIRTH_CHILD_2 = "PLACE_OF_BIRTH_CHILD_2"
    const val DATE_OF_BIRTH_CHILD_2 = "DATE_OF_BIRTH_CHILD_2"
    const val PLACE_OF_BIRTH_CHILD_3 = "PLACE_OF_BIRTH_CHILD_3"
    const val DATE_OF_BIRTH_CHILD_3 = "DATE_OF_BIRTH_CHILD_3"

    const val CLAIMANT_PREFIX = "CLAIMANT_"
    const val CLAIMANT_NAME = "CLAIMANT_NAME"
    const val CLAIMANT_FIRST_NAME = "CLAIMANT_FIRST_NAME"
    const val CLAIMANT_MIDDLE_INITIAL = "CLAIMANT_MIDDLE_INITIAL"
    const val CLAIMANT_LAST_NAME = "CLAIMANT_LAST_NAME"
    const val CLAIMANT_SSN = "CLAIMANT_SSN"
    const val CLAIMANT_DOB = "CLAIMANT_DOB"
    const val CLAIMANT_VBMS_MATCH = "CLAIMANT_VBMS_MATCH"
    const val CLAIMANT_IS_VETERAN = "CLAIMANT_IS_VETERAN"
    const val CLAIMANT_IS_FUNERAL_HOME = "CLAIMANT_IS_FUNERAL_HOME"
    const val CLAIMANT_TYPE = "CLAIMANT_TYPE"

    const val ORIGINAL_POA_ORG = "ORIGINAL_POA_ORG"
    const val POA_ORG = "POA_ORG"

    @JvmField
    val DEPENDENT_RANGE = 1..4
    const val DEPENDENT_KEY = "DEPENDENT"
    fun DEPENDENT_PREFIX(index: Int): String = "DEPENDENT${index}_"
    fun DEPENDENT_NAME(index: Int): String = "DEPENDENT${index}_NAME"
    fun DEPENDENT_FIRST_NAME(index: Int): String = "DEPENDENT${index}_FIRST_NAME"
    fun DEPENDENT_LAST_NAME(index: Int): String = "DEPENDENT${index}_LAST_NAME"
    fun DEPENDENT_SSN(index: Int): String = "DEPENDENT${index}_SSN"
    fun DEPENDENT_DOB(index: Int): String = "DEPENDENT${index}_DOB"
    fun DEPENDENT_BIRTHPLACE_CITY(index: Int): String = "DEPENDENT${index}_BIRTHPLACE_CITY"
    fun DEPENDENT_BIRTHPLACE_STATE(index: Int): String = "DEPENDENT${index}_BIRTHPLACE_STATE"
    fun DEPENDENT_VBMS_MATCH(index: Int): String = "DEPENDENT${index}_VBMS_MATCH"

    fun DEPENDENT_TERMINATION_NAME(index: Int): String = "DEPENDENT_TERMINATION${index}_NAME"
    fun DEPENDENT_TERMINATION_REASON(index: Int): String = "DEPENDENT_TERMINATION${index}_REASON"
    fun DEPENDENT_TERMINATION_DATE(index: Int): String = "DEPENDENT_TERMINATION${index}_DATE"

    @JvmField
    val CHILD_RANGE = 1..3
    const val CHILD_KEY = "CHILD"
    fun CHILD_NAME(index: Int): String = "CHILD${index}_NAME"
    fun CHILD_FIRST_NAME(index: Int): String = "CHILD${index}_FIRST_NAME"
    fun CHILD_LAST_NAME(index: Int): String = "CHILD${index}_LAST_NAME"
    fun CHILD_SSN(index: Int): String = "CHILD${index}_SSN"
    fun CHILD_DOB(index: Int): String = "CHILD${index}_DOB"
    fun CHILD_BIRTH_LOCATION(index: Int): String = "CHILD${index}_BIRTH_LOCATION"
    fun CHILD_BIRTHPLACE_STATE(index: Int): String = "CHILD${index}_BIRTH_STATE"
    fun CHILD_IS_BIOLOGICAL(index: Int): String = "CHILD${index}_IS_BIOLOGICAL"
    fun CHILD_IS_ADOPTED(index: Int): String = "CHILD${index}_IS_ADOPTED"
    fun CHILD_IS_STEP(index: Int): String = "CHILD${index}_IS_STEP"
    fun CHILD_IS_COLLEGE_AGE(index: Int): String = "CHILD${index}_IS_COLLEGE_AGE"
    fun CHILD_IS_DISABLED(index: Int): String = "CHILD${index}_IS_DISABLED"
    fun CHILD_IS_MARRIED(index: Int): String = "CHILD${index}_IS_MARRIED"
    fun CHILD_WAS_MARRIED(index: Int): String = "CHILD${index}_WAS_MARRIED"

    fun CUSTODIAN_CHILD_NAME(index: Int): String = "CUSTODIAN_CHILD${index}_NAME"
    fun CUSTODIAN_CHILD_ADDRESS_FULL_BLOCK(index: Int): String = "CUSTODIAN_CHILD${index}_ADDRESS_FULL_BLOCK"
    fun CUSTODIAN_CHILD_NAME_LIVES_WITH(index: Int): String = "CUSTODIAN_CHILD${index}_NAME_LIVES_WITH"
    fun CUSTODIAN_CHILD_CONTRIBUTION(index: Int): String = "CUSTODIAN_CHILD${index}_CONTRIBUTION"


    const val SPOUSE_KEY = "SPOUSE"
    const val SPOUSE_PREFIX = "SPOUSE_"
    const val SPOUSE_NAME = "SPOUSE_NAME"
    const val SPOUSE_SSN = "SPOUSE_SSN"
    const val SPOUSE_DOB = "SPOUSE_DOB"
    const val SPOUSE_VBMS_MATCH = "SPOUSE_VBMS_MATCH"

    // foia
    const val REQUESTOR_PREFIX = "REQUESTOR_"
    const val REQUESTOR_NAME = "REQUESTOR_NAME"
    const val REQUESTOR_FIRST_NAME = "REQUESTOR_FIRST_NAME"
    const val REQUESTOR_LAST_NAME = "REQUESTOR_LAST_NAME"
    const val VETERAN_REQUEST_NAME = "VETERAN_REQUEST_NAME"
    const val REQUESTOR_INFO = "REQUESTOR_INFO"
    const val REQUESTOR_ADDRESS = "REQUESTOR_ADDRESS"
    const val REQUEST_DATA = "REQUEST_DATA"
    const val REQUEST_CATEGORY = "REQUEST_CATEGORY"
    const val CB_REQUESTOR_IS_VETERAN = "CB_REQUESTOR_IS_VETERAN"
    const val CB_REQUESTOR_IS_LGPOA = "CB_REQUESTOR_IS_LGPOA"
    const val CB_REQUESTOR_IS_NEXTOFKIN = "CB_REQUESTOR_IS_NEXTOFKIN"
    const val CB_REQUESTOR_IS_OTHER = "CB_REQUESTOR_IS_OTHER"
    const val REQUESTOR_TYPE = "REQUESTOR_TYPE"
    const val POA = "POA"
    const val NEXTOFKIN = "NEXTOFKIN"
    const val REQUESTOR_VBMS_MATCH = "REQUESTOR_VBMS_MATCH"
    const val OTHER = "OTHER"
    const val REQUESTOR_SIGNATURE = "REQUESTOR_SIGNATURE"
    const val REQUESTOR_SIGNATURE_DATE = "REQUESTOR_SIGNATURE_DATE"
    const val DOCS_REQUESTED = "DOCS_REQUESTED"
    const val REQUEST_PURPOSE = "REQUEST_PURPOSE"

    // Returned Mail
    const val RECIPIENT_PREFIX = "RECIPIENT_"
    const val RECIPIENT_NAME = "RECIPIENT_NAME"
    const val RECIPIENT_FIRST_NAME = "RECIPIENT_FIRST_NAME"
    const val RECIPIENT_LAST_NAME = "RECIPIENT_LAST_NAME"
    const val RECIPIENT_ADDRESS_FULL_BLOCK = "RECIPIENT_ADDRESS_FULL_BLOCK"
    const val RECIPIENT_VBMS_MATCH = "RECIPIENT_VBMS_MATCH"
    const val RECIPIENT_TYPE = "RECIPIENT_TYPE"
    const val LETTER_RECIPIENT_NAME = "LETTER_RECIPIENT_NAME"

    private const val VBMS_MATCH_SUFFIX = "VBMS_MATCH"
    private const val COUNT_MATCH_SUFFIX = "COUNT_MATCH"

    const val NAME_SUFFIX = "_NAME"
    private const val FIRST_NAME_SUFFIX = "FIRST_NAME"
    private const val LAST_NAME_SUFFIX = "LAST_NAME"

    private const val TYPE_SUFFIX = "_TYPE"

    const val ADDRESS_FULL_BLOCK = "FULL_BLOCK"
    const val ADDRESS_LINE1 = "LINE1"
    const val ADDRESS_LINE2 = "LINE2"
    const val ADDRESS_LINE3 = "LINE3"
    const val ADDRESS_CITY = "CITY"
    const val ADDRESS_STATE = "STATE"
    const val ADDRESS_ZIP5 = "ZIP5"
    const val ADDRESS_COUNTRY = "COUNTRY"
    const val ADDRESS_IS_VALID = "IS_VALID"

    const val CLAIMANT_ADDRESS_PREFIX = "CLAIMANT_ADDRESS"
    const val VETERAN_ADDRESS_PREFIX = "VETERAN_ADDRESS"
    const val WITNESS_1_ADDRESS_PREFIX = "WITNESS_1"
    const val WITNESS_2_ADDRESS_PREFIX = "WITNESS_2"
    const val VBMS_ADDRESS = "VBMS_ADDRESS"
    const val CLAIMANT_VBMS_ADDRESS_PREFIX = "${CLAIMANT_PREFIX}$VBMS_ADDRESS"
    const val VETERAN_VBMS_ADDRESS_PREFIX = "${VETERAN_KEY}_$VBMS_ADDRESS"
    const val NEW_ADDRESS_PREFIX = "NEW_ADDRESS"
    const val DEPENDENT_ADDRESS_PREFIX = "DEPENDENT_ADDRESS"
    const val FORWARDING_ADDRESS_PREFIX = "FORWARDING_ADDRESS"
    const val FORWARDING_ADDRESS_FULL_BLOCK = "FORWARDING_ADDRESS_FULL_BLOCK"
    const val RECIPIENT_ADDRESS_PREFIX = "RECIPIENT_ADDRESS"
    const val RESPONDENT_ADDRESS_PREFIX = "RESPONDENT_ADDRESS"
    const val REQUESTOR_ADDRESS_PREFIX = "REQUESTOR_ADDRESS"
    const val LETTER_RECIPIENT_ADDRESS_FULL_BLOCK = "LETTER_RECIPIENT_ADDRESS_FULL_BLOCK"
    const val LETTER_RECIPIENT_ADDRESS_PREFIX = "LETTER_RECIPIENT_ADDRESS"

    @JvmField
    val RETURNED_MAIL_FIELDS = setOf(
        RECIPIENT_NAME, RECIPIENT_ADDRESS_FULL_BLOCK, "LETTER_DATE", VETERAN_NAME, VA_FILE_NUMBER,
        FORWARDING_ADDRESS_FULL_BLOCK, LETTER_RECIPIENT_NAME, LETTER_RECIPIENT_ADDRESS_FULL_BLOCK
    )

    @JvmField
    val RETURNED_MAIL_ADDRESS_PREFIXES =
        setOf(RECIPIENT_ADDRESS_PREFIX, FORWARDING_ADDRESS_PREFIX, LETTER_RECIPIENT_ADDRESS_PREFIX)

    const val VBMS_DEPENDENT_COUNT_MATCH = "VBMS_DEPENDENT_COUNT_MATCH"

    const val VBMS_MAILING_ADDRESS_EFFECTIVE_DATE = "VBMS_MAILING_ADDRESS_EFFECTIVE_DATE"
    const val VBMS_MAILING_ADDRESS_JOURNAL_DATE = "VBMS_MAILING_ADDRESS_JOURNAL_DATE"
    const val MILITARY_ADDRESS_REGEX = ".+ [ADFM]PO A.+"

    // layout tags
    const val HS_OUTDATED_FORM = "OutdatedForm"
    const val OUTDATED_FORM = "OUTDATED_FORM"
    const val LETTER_TYPE = "LETTER_TYPE"
    const val YEAR_2020 = "2020"
    const val FIELD_0538_2020 = "0538_2020"
    const val LAYOUT_TAG_CERTIFICATE_OF_DEATH = "CertofDeath"

    @JvmField
    val MMDDYYYY_SLASHES_FORMAT: DateTimeFormatter = DateTimeFormatter.ofPattern("MM/dd/uuuu")

    const val FOIA_STRING = "FOIA"

    const val LIMITATION_CONSENT_REASONS = "LIMITATION_CONSENT_REASONS"

    @JvmField
    val MATCHING_FIELD_SUFFIXES = setOf(
        VBMS_MATCH_SUFFIX, VETERAN_SSN, COUNT_MATCH_SUFFIX, CLAIMANT_IS_VETERAN,
        CLAIMANT_SSN, OCR_VETERAN_NAME, FIRST_NAME_SUFFIX, LAST_NAME_SUFFIX, RECIPIENT_NAME, TYPE_SUFFIX,
        OCR_DECEASED_NAME, DECEASED_SSN, "REASONS", "_ADDRESS", "_UPDATE", VBMS_MAILING_ADDRESS_EFFECTIVE_DATE,
        VBMS_MAILING_ADDRESS_JOURNAL_DATE, "${VBMS_ADDRESS}_$ADDRESS_LINE1", "${VBMS_ADDRESS}_$ADDRESS_LINE2",
        "${VBMS_ADDRESS}_$ADDRESS_CITY", "${VBMS_ADDRESS}_$ADDRESS_STATE", "${VBMS_ADDRESS}_$ADDRESS_ZIP5",
        "${VBMS_ADDRESS}_$ADDRESS_COUNTRY", "IS_INTERNATIONAL", "IS_MILITARY"
    )

    @JvmField
    val DOCUMENTS_WITH_WITNESS_NAME_ADDRESS_FIELDS = setOf(
        DOC_TYPE_534_EZ, DOC_TYPE_534, DOC_TYPE_530, DOC_TYPE_530_EZ,
        DOC_TYPE_527EZ
    )
}
